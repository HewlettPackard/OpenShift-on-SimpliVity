###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
#######################################################################
#
# Play: take a backup of all etcd cluster members which are Healthy
#
#######################################################################
- hosts: master
  gather_facts: false
  tasks:

  - name: Get TimeStamp
    run_once: true
    command: date -u '+%Y_%m_%d_%H%M%S'
    register: timestamp
    delegate_to: localhost

  - name: Make sure the backup folder exists
    delegate_to: localhost
    run_once: true
    file:
      path: "{{ backup_directory }}"
      state: directory
      mode: '0755'

  - name: Get List of master nodes
    delegate_to: localhost
    k8s_facts:
      kind: nodes
      label_selectors:
      - node-role.kubernetes.io/master
    register: res
    environment:
      KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

  - name: Identify a master which is ready
    delegate_to: localhost
    set_fact:
      master_node: "{{ res.resources | json_query(query)  }}"
#      master_node: "{{ res.resources | json_query(query) | first }}"
    vars:
      query:  '[?status.conditions[? type==`Ready` && status==`True`]].metadata.name'

  - name: backup etcd
    raw: sudo  /usr/local/bin/etcd-snapshot-backup.sh ./assets/backup/snapshot.db
    register: res
    when: inventory_hostname in master_node

  - name: create temporary directory
    run_once: true
    tempfile:
      state: directory
    delegate_to: localhost
    register: res

  - name: Fetch and store snapshot data in temporary directory
    become: true
    fetch:
      dest: "{{ res.path }}"
      src: "{{ item }}"
    with_items:
      - ./assets/backup/etcd-ca-bundle.crt
      - ./assets/backup/etcd-client.crt
      - ./assets/backup/etcd-client.key
      - ./assets/backup/etcd-member.yaml
      - ./assets/backup/snapshot.db
    when: inventory_hostname in master_node

  - name: Archive snapshot data
    run_once: true
    archive:
      path: "{{ res.path }}/"
      dest: "{{ backup_directory }}/backup_{{ timestamp.stdout }}.snapshots.tgz"
    delegate_to: localhost

  - name: Delete the temporary folder
    run_once: true
    file:
      path: "{{ res.path }}"
      state: absent
    delegate_to: localhost

  - name: Archive metadata as well
    run_once: true
    archive:
      path: "{{ backup_artifacts }}"
      dest: "{{ backup_directory }}/backup_{{ timestamp.stdout }}.misc.tgz"
    delegate_to: localhost


