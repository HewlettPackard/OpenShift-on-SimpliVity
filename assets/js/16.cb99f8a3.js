(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{246:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"inventory-group-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inventory-group-variables","aria-hidden":"true"}},[e._v("#")]),e._v(" Inventory group variables")]),e._v(" "),a("h2",{attrs:{id:"group-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-files","aria-hidden":"true"}},[e._v("#")]),e._v(" Group files")]),e._v(" "),a("p",[e._v("The following files, in the "),a("code",[e._v("group_vars")]),e._v(" folder, contain variable definitions for each group.\nThese group files facilitate more sophisticated settings, such as additional network interfaces.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("File")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("group_vars/bootstrap.yml")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Variables defined for the node in the "),a("code",[e._v("[bootstrap]")]),e._v(" group.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("group_vars/infrastructure.yml")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Variables defined for all nodes in the "),a("code",[e._v("[infrastructure]")]),e._v(" group.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("group_vars/loadbalancer.yml")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Variables defined for all nodes in the "),a("code",[e._v("[loadbalancer]")]),e._v(" group.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("group_vars/nfs.yml")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Variables defined for all nodes in the "),a("code",[e._v("[nfs]")]),e._v(" group.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("group_vars/master.yml")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Variables defined for all nodes in the "),a("code",[e._v("[master]")]),e._v(" group.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("group_vars/rhcos_worker.yml")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Variables defined for all nodes in the "),a("code",[e._v("[rhcos_worker]")]),e._v(" group.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("group_vars/rhel_worker.yml")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Variables defined for all nodes in the "),a("code",[e._v("[rhel_worker]")]),e._v(" group.")])])])]),e._v(" "),a("h1",{attrs:{id:"overriding-group-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overriding-group-variables","aria-hidden":"true"}},[e._v("#")]),e._v(" Overriding group variables")]),e._v(" "),a("p",[e._v("If you wish to configure individual nodes with different specifications to the ones defined by the group, it is possible to declare the same variables at the node level, overriding the group value. For instance, you could have some of your workers with higher specifications by setting:")]),e._v(" "),a("p",[e._v("In the file "),a("code",[e._v("group_vars/worker.yml")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cpus: '4'                                               # Number of vCPUs\nram: '16384'                                            # RAM size in MBs\ndisk1_size: '120'                                       # Disk size in GBs\n")])])]),a("p",[e._v("In the "),a("code",[e._v("hosts")]),e._v(" file:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[rhcos_worker]\nocp-worker0   ansible_host=10.15.155.213\nocp-worker1   ansible_host=10.15.155.214\nocp-worker2   ansible_host=10.15.155.215  cpus=8 ram=32768  # Larger worker node for EFK\nocp-worker3   ansible_host=10.15.155.216  cpus=8 ram=32768  # Larger worker node for EFK\nocp-worker4   ansible_host=10.15.155.217  cpus=8 ram=32768  # Larger worker node for EFK\n")])])]),a("p",[e._v("In the example above, three CoreOS worker nodes would have 2 times more CPU and double the RAM compared to the rest of the CoreOS worker nodes.")]),e._v(" "),a("h2",{attrs:{id:"common-variables-across-all-groups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-variables-across-all-groups","aria-hidden":"true"}},[e._v("#")]),e._v(" Common variables across all groups")]),e._v(" "),a("p",[e._v("The variables you can use are described in the table below.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Variable")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Scope")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("ip_addr")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("All nodes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("IP address in CIDR format to be given to a node")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("esxi_host")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("All nodes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("ESXi host where the node will be deployed. If the cluster is configured with DRS, this option will be overridden")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("cpus")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("All nodes/groups")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Number of CPUs to assign to a VM or a group of VMs")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("ram")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("All nodes/groups")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Amount of RAM in MB to assign to a VM or a group of VMs")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("disk1_size")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("All nodes/groups")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Size of the  disk in GB to attach to a VM or a group of VMs.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("folder")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("All nodes/groups")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("The folder where the VM will be stored")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("template")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("All nodes/groups")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Override the default template for the node or group. "),a("br"),a("br"),e._v("The Bootstrap node ("),a("code",[e._v("[bootstrap]")]),e._v(" uses the CoreOS template specified by "),a("code",[e._v("<<master_template>>")]),e._v("."),a("br"),a("br"),e._v("Infrastructure and supporting nodes ("),a("code",[e._v("[infrastructure]")]),e._v(", "),a("code",[e._v("[loadbalancer]")]),e._v(", "),a("code",[e._v("[nfs]")]),e._v(") use the RHEL template specified by "),a("code",[e._v("<<infra_template>>")]),e._v(" by default. "),a("br"),a("br"),e._v("The master nodes ("),a("code",[e._v("[master]")]),e._v(") use the CoreOS template specified by "),a("code",[e._v("<<master_template>>")]),e._v(". "),a("br"),a("br"),e._v("The CoreOS worker nodes ("),a("code",[e._v("[rhcos_worker]")]),e._v(") use  the CoreOS template specified by "),a("code",[e._v("<<worker_template>>")]),e._v(", which is typically the same as <<master_template>>."),a("br"),a("br"),e._v("For RHEL worker nodes ("),a("code",[e._v("[rhel_worker]")]),e._v("), you should set the group default to name of the RHEL template you typically use.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("ova_path")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("All nodes/groups")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Name of the OVA used to import the template. "),a("br"),a("br"),e._v("The Bootstrap node ("),a("code",[e._v("[bootstrap]")]),e._v(" uses the CoreOS OVA specified by "),a("code",[e._v("<<master_ova_path>>")]),e._v("."),a("br"),a("br"),e._v("Infrastructure and supporting nodes ("),a("code",[e._v("[infrastructure]")]),e._v(", "),a("code",[e._v("[loadbalancer]")]),e._v(", "),a("code",[e._v("[nfs]")]),e._v(") use the RHEL OVA specified by "),a("code",[e._v("<<infra_ova_path>>")]),e._v(" by default. "),a("br"),a("br"),e._v("The master nodes ("),a("code",[e._v("[master]")]),e._v(") use the CoreOS OVA specified by "),a("code",[e._v("<<master_ova_path>>")]),e._v(". "),a("br"),a("br"),e._v("The CoreOS worker nodes ("),a("code",[e._v("[rhcos_worker]")]),e._v(") use  the CoreOS OVA specified by "),a("code",[e._v("<<worker_ova_path>>")]),e._v(", which is typically the same as "),a("code",[e._v("<<master_template>>")]),e._v("."),a("br"),a("br"),e._v("For RHEL worker nodes ("),a("code",[e._v("[rhel_worker]")]),e._v("), you should set the group default to name of the RHEL OVA you typically use.")])])])]),e._v(" "),a("h2",{attrs:{id:"variables-specific-to-coreos-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables-specific-to-coreos-nodes","aria-hidden":"true"}},[e._v("#")]),e._v(" Variables specific to CoreOS nodes")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Variable")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Scope")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("ignition_file")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("[bootstrap]")]),a("br"),a("code",[e._v("[master]")]),a("br"),a("code",[e._v("[worker]")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Location of the ignition data. The default directory is defined by "),a("code",[e._v("<<install_dir>>")]),e._v(" and the file name depends on the group: "),a("br"),a("br"),a("code",[e._v("append-bootstrap.ign")]),e._v(" for "),a("code",[e._v("[bootstrap]")]),e._v(" node"),a("br"),a("br"),a("code",[e._v("master.ign")]),e._v(" for "),a("code",[e._v("[master]")]),e._v(" nodes"),a("br"),a("br"),a("code",[e._v("worker.ign")]),e._v(" for "),a("code",[e._v("[worker]")]),e._v(" nodes")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("initial_port_check")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("[bootstrap]")]),a("br"),a("code",[e._v("[master]")]),a("br"),a("code",[e._v("[worker]")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Port to use when testing connectivity. "),a("br"),a("br"),e._v("For "),a("code",[e._v("[bootstrap]")]),e._v(" node, port "),a("code",[e._v("22")]),e._v(" "),a("br"),a("br"),e._v("For "),a("code",[e._v("[master]")]),e._v(" nodes, port "),a("code",[e._v("6443")]),a("br"),a("br"),e._v("For "),a("code",[e._v("[worker]")]),e._v(" nodes, port "),a("code",[e._v("22")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("initial_port_check_timeout")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("[bootstrap]")]),a("br"),a("code",[e._v("[master]")]),a("br"),a("code",[e._v("[worker]")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Delay in seconds before testing for connectivity. "),a("br"),a("br"),e._v("For "),a("code",[e._v("[bootstrap]")]),e._v(" node, wait "),a("code",[e._v("10")]),e._v(" seconds after intial power on for the port to be open."),a("br"),a("br"),e._v("For "),a("code",[e._v("[master]")]),e._v(" nodes, wait up to "),a("code",[e._v("900")]),e._v(" seconds for the OpenShift API to be available"),a("br"),a("br"),e._v("For "),a("code",[e._v("[worker]")]),e._v(" nodes, wait "),a("code",[e._v("10")]),e._v(" seconds.")])])])]),e._v(" "),a("h2",{attrs:{id:"disk-specifications"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disk-specifications","aria-hidden":"true"}},[e._v("#")]),e._v(" Disk specifications")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("disks_specs:\n  - size_gb:  '{{ disk1_size }}'\n    type: thin\n    datastore: \"{{ datastores | random }}\"\n")])])]),a("h2",{attrs:{id:"custom-values-for-coreos-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-values-for-coreos-nodes","aria-hidden":"true"}},[e._v("#")]),e._v(" Custom values for CoreOS nodes")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('customvalues:\n  - key: disk.EnableUUID\n    value: "TRUE"\n  - key: guestinfo.ignition.config.data\n    value: "{{ ignition_data }}"\n  - key: guestinfo.ignition.config.data.encoding\n    value: base64\n  - key: sched.cpu.latencySensitivity\n    value: High\n')])])]),a("p",[e._v("The "),a("code",[e._v("ignition_data")]),e._v(" variable is generated from the ignition file in the playbook "),a("code",[e._v("playbooks/roles/vspherevm/tasks/provision_vm.yml")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("- name: Load Ignition Data\n  set_fact:\n    ignition_data: \"{{ lookup('file', ignition_file) | b64encode }}\"\n")])])]),a("h2",{attrs:{id:"group-variables-for-infrastructure-and-support-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-variables-for-infrastructure-and-support-nodes","aria-hidden":"true"}},[e._v("#")]),e._v(" Group variables for infrastructure and support nodes")]),e._v(" "),a("p",[e._v("The nodes in the groups "),a("code",[e._v("[infrastructure]")]),e._v(","),a("code",[e._v("[loadbalancer]")]),e._v(", and "),a("code",[e._v("[nfs]")]),e._v(" are typically RHEL nodes and have the\nfollowing common definitions.")]),e._v(" "),a("h3",{attrs:{id:"customvalues"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#customvalues","aria-hidden":"true"}},[e._v("#")]),e._v(" customvalues")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('customvalues: \n  - key: guestinfo.metadata\n    value: "{{ cloud_init_metadata_data }}"\n  - key: guestinfo.metadata.encoding\n    value: base64\n  - key: guestinfo.userdata\n    value:  "{{ cloud_init_users_data }}"\n  - key: guestinfo.userdata.encoding\n    value: base64\n')])])]),a("h3",{attrs:{id:"networks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#networks","aria-hidden":"true"}},[e._v("#")]),e._v(" networks")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("networks:\n  - name: '{{ vm_portgroup }}'\n")])])]),a("p",[e._v("Load balancers have extra entry in "),a("code",[e._v("networks")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("networks:\n  - name: '{{ vm_portgroup }}'\n  - name: '{{ frontend_vm_portgroup }}'\n")])])]),a("h3",{attrs:{id:"cloud-init-networks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-init-networks","aria-hidden":"true"}},[e._v("#")]),e._v(" cloud_init_networks")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('cloud_init_networks:\n  version: 1\n  config:\n  - type: physical\n    name: ens192\n    subnets:\n      - type: static\n        address: "{{ hostvars[inventory_hostname].ansible_host }}"\n        netmask: "{{ dhcp_subnet | ipaddr(\'netmask\') }}"\n        gateway: "{{ gateway }}"\n        dns_nameservers: "{{ internal_dns_servers | union(dns_servers) }}"\n        dns_search:\n          - "{{ cluster_name }}.{{ domain_name }}"\n')])])]),a("p",[e._v("Load balancers have extra config for second (frontend) network")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('cloud_init_networks:\n  version: 1\n  config:\n  - type: physical\n    name: ens192\n...    \n  - type: physical\n    name: ens224\n    subnets:\n      - type: static\n        address: "{{ hostvars[inventory_hostname].frontend_ipaddr | ipaddr(\'address\') }}"\n        netmask: "{{ hostvars[inventory_hostname].frontend_ipaddr | ipaddr(\'netmask\') }}"\n        gateway: "{{ frontend_gateway }}"\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);