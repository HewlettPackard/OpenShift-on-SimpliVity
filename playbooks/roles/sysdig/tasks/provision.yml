###
# Copyright (2019) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- name: Create a project for sysdig
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        annotations:
          openshift.io/node-selector: app=sysdig-agent
        name: sysdig-agent

- name: Create Secret for the sysdig access key
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    definition:
      api_version: v1
      kind: Secret
      metadata:
        name: sysdig-agent
        namespace: sysdig-agent
      data:
        access-key: "{{ sysdig_access_key | b64encode}}"
      type: Opaque
  register: res

- name: Label the nodes
  shell: |
    oc label node --all "app=sysdig-agent" --overwrite
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Create the service account for sysdig
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    definition:
      kind: ServiceAccount
      metadata:
        name: sysdig-agent
        namespace: sysdig-agent
  register: res

- name: Add the service account to privileged Security Context Constraints
  shell: |
    sysdig_user="system:serviceaccount:sysdig-agent:sysdig-agent"
    found=false; changed=false
    p_users=$(oc get scc privileged -o jsonpath='{.users[*]}')
    for user in $p_users
    do
       if [ "$user" == "$sysdig_user" ]
       then
         found=true
         break
       fi
    done
    if [ $found != true ]
    then
      # add  sysdig user to SCC
      oc adm policy add-scc-to-user privileged -n sysdig-agent -z sysdig-agent >/dev/null
      changed=true
    fi
    echo changed: $changed
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"
  register: res
  changed_when: '"changed: true" in res.stdout_lines'

- name: Add cluster-reader role to sysdig service account
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: cluster-reader
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-reader
      subjects:
      - kind: ServiceAccount
        name: sysdig-account
        namespace: sysdig-agent

- name: Load the sysdig supplied manifests
  set_fact:
    sysdig_agent_configmap: "{{ lookup('file', sysdig_agent_configmap_manifest) }}"
    sysdig_agent_daemonset: "{{ lookup('file', sysdig_agent_daemonset_manifest) }}"

- name: Apply sysdig configmap
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    namespace: sysdig-agent
    definition: "{{ sysdig_agent_configmap }}"

- name: Apply sysdig daemonset
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    namespace: sysdig-agent
    definition: "{{ sysdig_agent_daemonset }}"
-  
