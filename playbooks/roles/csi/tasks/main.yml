###
# Copyright (2019) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 

- name: Install k8s module prereq
  become: true
  package:
    name: python3-openshift
    state: present

- name: Get Datastore facts
  vmware_datastore_facts:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter_name: '{{ datacenter }}'
    name: "{{ csi_datastore_name | default(datastores[0]) }}"
    validate_certs:  "{{ vcenter_validate_certs }}"
  delegate_to: localhost
  register: csi_datastore_facts

- name: Create vSphere Config secret
  k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      data:
        csi-vsphere.conf: "{{ lookup('template', 'csi-vsphere.conf.j2') | b64encode }}"
      metadata:
        name: vsphere-config-secret
        namespace: kube-system
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

#- name: Copy RBAC file 
#  copy:
#    src: vsphere-csi-controller-rbac.yml
#    dest: /tmp/vsphere-csi-controller-rbac.yml
#- name: Deploy RBAC artifacts
#  shell:
#    oc apply -f /tmp/vsphere-csi-controller-rbac.yml
#  register: res
#  environment:
#    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Deploy RBAC Artifacts
  k8s:
    state: present
    definition: "{{ lookup('file','vsphere-csi-controller-rbac.yml') }}"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

#- name: Copy deployment file
#  copy:
#    src: csi-driver-deploy.yml
#    dest: /tmp/csi-driver-deploy.yml
#- name: Deploy CSI 
#  shell:
#    oc apply -f /tmp/csi-driver-deploy.yml
#  register: res
#  environment:
#    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Deploy CSI plugin
  k8s:
    state: present
    definition: "{{ lookup('file','csi-driver-deploy.yml') }}"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Generate the Storage Class
  k8s:
    state: present
    definition:  "{{ lookup('template','csi-sc.yml.j2') }}"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

