###
# Copyright (2019) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

frontend openshift-api-server
    bind *:6443
    default_backend openshift-api-server
    mode tcp
    option tcplog

backend openshift-api-server
    balance source
    mode tcp
{% for host in groups['bootstrap'] %}
    server bootstrap{{ loop.index - 1 }}.{{ cluster_name }} {{ hostvars[host].ansible_host }}:6443 check
{% endfor %}
{% for host in groups['master'] %}
    server master{{ loop.index - 1 }}.{{ cluster_name }} {{ hostvars[host].ansible_host }}:6443 check
{% endfor %}

frontend machine-config-server
    bind *:22623
    default_backend machine-config-server
    mode tcp
    option tcplog

backend machine-config-server
    balance source
    mode tcp
{% for host in groups['bootstrap'] %}
    server bootstrap{{ loop.index - 1 }}.{{ cluster_name }} {{ hostvars[host].ansible_host }}:22623 check
{% endfor %}
{% for host in groups['master'] %}
    server master{{ loop.index - 1 }}.{{ cluster_name }} {{ hostvars[host].ansible_host }}:22623 check
{% endfor %}
  
frontend ingress-http
    bind *:80
    default_backend ingress-http
    mode tcp
    option tcplog

backend ingress-http
    balance source
    mode tcp
{% for host in groups['worker'] %}
    server worker{{ loop.index  - 1 }}.{{ cluster_name }} {{ hostvars[host].ansible_host }}:80 check
{% endfor %}
   
frontend ingress-https
    bind *:443
    default_backend ingress-https
    mode tcp
    option tcplog

backend ingress-https
    balance source
    mode tcp
{% for host in groups['worker'] %}
    server worker{{ loop.index  - 1 }}.{{ cluster_name }} {{ hostvars[host].ansible_host }}:443 check
{% endfor %}

