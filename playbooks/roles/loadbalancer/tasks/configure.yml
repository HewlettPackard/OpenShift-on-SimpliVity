###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- name: Enable firewall
  become: true
  systemd:
    name: firewalld
    enabled: yes
    state: started


- name: Configure required ports in internal zone
  become: true
  firewalld:
    zone: internal
    port: "{{ item }}"
    immediate: true
    permanent: true
    state: enabled
  with_items:
   - 6443/tcp   # kubernetes API server
   - 22623/tcp  # Machine config server
   - 443/tcp    # https traffic
   - 80/tcp     # http traffic
   - 9000/tcp   # HAProxy stats

- name: Add rule for vrrp protocole
  become: true
  firewalld:
    zone: internal
    rich_rule: 'rule protocol value="vrrp" accept'
    immediate: true
    permanent: true
    state: enabled

- name: Configure internal zone
  become: true
  firewalld:
    zone: internal
    interface: "{{ loadbalancers.backend.interface }}"
    state: enabled

- name: Configure required ports in external zone
  become: true
  firewalld:
    zone: external
    port: "{{ item }}"
    immediate: true
    permanent: true
    state: enabled
  with_items:
   - 6443/tcp   # kubernetes API server
   - 22623/tcp  # Machine config server
   - 443/tcp    # https traffic
   - 80/tcp     # http traffic

- name: Add rule for vrrp protocole
  become: true
  firewalld:
    zone: external
    rich_rule: 'rule protocol value="vrrp" accept'
    immediate: true
    permanent: true
    state: enabled

- name: Configure External zone
  become: true
  firewalld:
    zone: external
    interface: "{{ loadbalancers.frontend.interface }}"
    state: enabled

# address issue with multihomed servers
- name: Configure rp_filter
  become: true
  sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: "2"
    state: present
    sysctl_set: yes


- name: Install Pkgs needed by seboolean module
  become: true
  package:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - libsemanage-python
    - libselinux-python

- name: Enable HAPROXY to open non standard ports
  become: true
  seboolean:
    name: haproxy_connect_any
    state: yes
    persistent: yes

- name: Install haproxy
  become: true
  package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - haproxy

- name: Update haproxy.cfg
  become: true
  template:
     src: haproxy.cfg.j2
     dest: /etc/haproxy/haproxy.cfg
  notify: Restart haproxy

- name: start haproxy
  become: true
  systemd:
    name: haproxy
    enabled: yes
    state: started

- block: # if loadbalancers is defined, we want floating IPs

  - name: Allow binding on remote IPs
    become: true
    sysctl:
      name: net.ipv4.ip_nonlocal_bind
      value: "1"
      state: present
      sysctl_set: yes

  - name: Allow routing
    become: true
    sysctl:
      name: net.ipv4.ip_forward
      value: "1"
      state: present
      sysctl_set: yes

  - name: Install keepalived and required tools
    become: true
    package:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - psmisc
        - keepalived

  - name: Update keepalived.conf
    become: true
    template:
      src: keepalived.conf.j2
      dest: /etc/keepalived/keepalived.conf
      owner: root
      group: root
      mode: 0644
    notify: Enable and start keepalived service

  - name: start keepalived
    become: true
    systemd:
      name: keepalived
      enabled: yes
      state: started

  when: loadbalancers.backend.vip is defined or loadbalancers.frontend.vip is defined
