###
# Copyright (2019) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- name: Sanity check
  fail:
    msg: "EFK profile ({{i efk_profile }}) must be one of {{ supported_profiles }}"
  when: efk_profile | lower not in supported_profiles
  vars:
    supported_profiles:
    - small
    - large

- name: Create temporary folder 
  tempfile:
    state: directory
    suffix: build
  register: tempdir
  changed_when: false

- name: Search the Elasticsearch Operator in the OpenShift Marketplace
  k8s_facts:
    namespace: openshift-marketplace
    kind: PackageManifest
    name: elasticsearch-operator
  register: res
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Get the list of available channels
  set_fact:
    channels: "{{ res.resources | json_query ('[].status.channels[].name') }}"

- name: Fail if the specified channel cannot be found
  fail:
    msg: "Invalid channel {{ efk_channel }} for EFK must be one of {{ channels }}" 
  when: efk_channel not in channels 

- name: Generate manifests from templates
  template:
    src: "{{ item }}.j2"
    dest: "{{ tempdir.path }}/{{ item }}"
  changed_when: false
  with_items:
  - clo-crd_large.yml
  - clo-crd_small.yml
  - clo-prelim.yml
  - clo-sub.yml
  - eo-final.yml
  - eo-prelim.yml
  - eo-sub.yml

- name: Create preliminary artifacts for Elasticsearch
  k8s:
    state: present
    src: "{{ tempdir.path }}/eo-prelim.yml"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Create Subscription Object for Elastic
  k8s:
    state: present
    src:  "{{ tempdir.path }}/eo-sub.yml"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Create Additional Objects for Elasticsearch
  k8s:
    state: present
    src:  "{{ tempdir.path }}/eo-final.yml"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Wait for Elasticsearch operator installation to complete
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: openshift-operators-redhat
  register: res
  delay: 10
  retries: 10
  until:
    - res.resources | json_query('[?status.*[? requirementStatus.name==`elasticsearch-operator`]]')
    - res.resources | json_query('[?status.*[? reason==`InstallSucceeded`]]')
    - res.resources | json_query('[?status.*[? phase==`Succeeded`]]')
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Create preliminary artifacts for Cluster Logging
  k8s:
    state: present
    src: "{{ tempdir.path }}/clo-prelim.yml"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Create Cluster Logging Subscription
  k8s:
    state: present
    src: "{{ tempdir.path }}/clo-sub.yml"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Wait for Cluster Logging Operator installation to complete
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: openshift-logging
  register: res
  delay: 10
  retries: 10
  until:
    - res.resources | json_query('[?status.*[? requirementStatus.name==`cluster-logging-operator`]]')
    - res.resources | json_query('[?status.*[? reason==`InstallSucceeded`]]')
    - res.resources | json_query('[?status.*[? phase==`Succeeded`]]')
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- name: Create Cluster Logging Instance
  k8s:
    state: present
    src: "{{ tempdir.path }}/clo-crd_{{ efk_profile | lower }}.yml"
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

- debug:
    msg: "Deployed EFK with profile {{ efk_profile }}"

- name: Delete the temporary folder
  file:
    path: "{{ tempdir.path }}"
    state: absent
  changed_when: false
  when: _debug is not defined
