###
# Copyright (2019) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---

#
# Can't count on the user having local DNS (/etc/resolv.conf) configured to
# point to support DNS server deployed as part of the solution, so we bypass
# local hostname resolution and use dig command to get the application IP address 
# from the support DNS server directly using:
#     dig @<support_ip> <app_hostname> 
# The returned IP address is used to connect to the WordPress application, must
# also must set Host value in the HTTP header so teh connection is routed to 
# the WordPress application.
#

- name: Set WordPress application hostname
  set_fact:
    app_hostname: "{{ wp_app_name }}.apps.{{ cluster_name }}.{{ domain_name }}"

- name: Build list of support DNS servers deployed
  set_fact:
    dns_servers: "{{ groups['support'] | map('extract', hostvars, ['ansible_host']) | list }}"

- name: Get Application IP address 
  vars:
    dns_servers: "{{ groups['support'] | map('extract', hostvars, ['ansible_host']) | list }}"
  shell: "dig +short @{{dns_servers[0] }} {{ app_hostname }}"
  register: ans

- name: Set Application URL using IP
  set_fact:
    app_url: "http://{{ ans.stdout }}"

- name: Wait for WordPress pods to become ready (maximum 5 minutes)
  shell: "kubectl wait --namespace={{ wp_proj_name }} --for=condition=Ready pods --selector tier=frontend --timeout=5m"
  register: res
  environment:
    KUBECONFIG: "{{ install_dir }}/auth/kubeconfig"

#
# Even though Pod is up it can take a little time before Apache Webserver is up - wait for 20 seconds
#
- name:  Give WordPress some time to complete startup
  wait_for: 
    timeout: 20

- name: Validate WordPress Webserver access
  uri:
    url: "{{ app_url }}"
    follow_redirects: none
    headers:
      Host: "{{ app_hostname }}"
    status_code: 302
  retries: 10
  delay: 2
  register: result
  until: result.status == 302
